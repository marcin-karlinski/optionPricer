optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 1000, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 1000, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 1000, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 1000, nReps = 1000)
test <- optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 1000, nReps = 1000)
test
remove.packages("optionPricer")
detach("package::optionPricer", unload = T)
install.packages("C:/Users/marci/Desktop/UW/III Semester/applied_finance/optionPricer_package/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
install.packages("C:/Users/marci/Desktop/UW/III Semester/applied_finance/optionPricer_package/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
test <- optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 20, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 20, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 30, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 40, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 50, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 60, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 70, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 80, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 90, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 95, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 97, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 99, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 100, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 120, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 98, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 126, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.5, barrier = 95, nReps = 1000)
remove.packages("optionPricer")
install.packages("C:/Users/marci/Desktop/UW/III Semester/applied_finance/optionPricer_package/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
optionPricer::downAndOut_europeanCallPrice(nInt = 27, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.1, barrier = 95, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 25.6, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.1, barrier = 95, nReps = 1000)
optionPricer::downAndOut_europeanCallPrice(nInt = 2, strike = 100, spot = 105, vol = 0.22, r = 0.05, expiry = 0.1, barrier = 95, nReps = 1000)
#At first I will define some basic parameters. Let
nInt   <- 126
spot   <- 105
strike <- 100
r      <- 0.05
vol    <- 0.22
expiry <- 0.5
nReps  <- 10^5
barrier = 95
nReps  <- 10^5
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = vol,
r = r,
expiry = expiry,
barrier = barrier,
nReps = 100000)
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = vol,
r = r,
expiry = expiry,
barrier = barrier,
nReps = nReps)
nReps  <- 10^4
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = vol,
r = r,
expiry = expiry,
barrier = barrier,
nReps = nReps)
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = 0.22,
r = r,
expiry = 0.5,
barrier = barrier,
nReps = nReps)
#At first I will define some basic parameters. Let
nInt   <- 126
spot   <- 105
strike <- 100
r      <- 0.05
barrier = 95
nReps  <- 10^4
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = 0.22,
r = r,
expiry = 0.5,
barrier = barrier,
nReps = nReps)
#I will build an R function with all parameters apart from expiry date set at constant
getEuropeanCallPrice <- function(expiry = 0.5, vol = 0.22) {
return(optionPricer1::getCallPrice(nInt = round(252*expiry),
strike = strike,
spot   = Spot,
vol    = vol,
r      = r,
expiry = expiry,
nReps = nReps))
}
#I will build an R function with all parameters apart from expiry date set at constant
getEuropeanCallPrice <- function(expiry = 0.5, vol = 0.22) {
return(optionPricer::downAndOut_europeanCallPrice(nInt = round(252*expiry),
strike = strike,
spot   = Spot,
vol    = vol,
r      = r,
expiry = expiry,
nReps = nReps))
}
getEuropeanCallPrice()
#At first I will define some basic parameters. Let
nInt   <- 126
spot   <- 105
strike <- 100
r      <- 0.05
barrier = 95
nReps  <- 10^4
optionPricer::downAndOut_europeanCallPrice(nInt = nInt,
strike = strike,
spot = spot,
vol = 0.22,
r = r,
expiry = 0.5,
barrier = barrier,
nReps = nReps)
rm()
#I will build an R function with all parameters apart from expiry date set at constant
getEuropeanCallPrice <- function(expiry = 0.5, vol = 0.22) {
return(optionPricer::downAndOut_europeanCallPrice(nInt = round(252*expiry),
strike = 100,
spot   = 105,
vol    = vol,
r      = 0.05,
expiry = expiry,
nReps = 10^4))
}
getEuropeanCallPrice()
return(optionPricer::downAndOut_europeanCallPrice(nInt = round(252*expiry),
strike = 100,
spot   = 105,
vol    = vol,
r      = 0.05,
expiry = expiry,
barrier = 95,
nReps = 10^4))
#I will build an R function with all parameters apart from expiry date set at constant
getEuropeanCallPrice <- function(expiry = 0.5, vol = 0.22) {
return(optionPricer::downAndOut_europeanCallPrice(nInt = round(252*expiry),
strike = 100,
spot   = 105,
vol    = vol,
r      = 0.05,
expiry = expiry,
barrier = 95,
nReps = 10^4))
}
getEuropeanCallPrice()
# arguments values of values of function
expiry <- seq(0.01, 0.1, by = 0.001)
expiry
# arguments values of values of function
expiry <- seq(0.01, 0.1, by = 0.001)
volatility <- seq(0.05, 0.3, by = 0.01)
volatility <- seq(0.05, 0.3, by = 0.001)
prices <- sapply(expiry, getEuropeanCallPrice)
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")
library(tidyverse)
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")  +
theme_cowplot()
library(cowplot)
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")  +
theme_cowplot()
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")  +
theme_classic()
# relationship between expiry and option price
tibble(
expiry = expiry,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer1 package")  +
theme_minimal()
prices <- sapply(volatility, getEuropeanCallPrice)
# relationship between expiry and option price
tibble(
volatility = volatility,
prices = prices
) %>%
ggplot(aes(expiry, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer package")  +
theme_minimal()
# relationship between expiry and option price
tibble(
volatility = volatility,
prices = prices
) %>%
ggplot(aes(volatility, prices)) +
geom_point(col = "red") +
labs(
x     = "time to maturity",
y     = "price of European call option",
title = "price of European call option vs. time  to maturity",
caption = "source: own calculations with the optionPricer package")  +
theme_minimal()
